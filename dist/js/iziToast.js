/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["iziToast"] = factory();
	else
		root["iziToast"] = factory();
})(self, function() {
return /******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/clipboard.js":
/*!*****************************!*\
  !*** ./src/js/clipboard.js ***!
  \*****************************/
/***/ (function(module) {

eval("\r\n\r\n/*!\r\n * clipboard.js v2.0.8\r\n * https://clipboardjs.com/\r\n *\r\n * Licensed MIT Â© Zeno Rocha\r\n */\r\n(function webpackUniversalModuleDefinition(root, factory) {\r\n\tif(true)\r\n\t\tmodule.exports = factory();\r\n\telse {}\r\n})(this, function() {\r\nreturn /******/ (function() { // webpackBootstrap\r\n/******/ \tvar __webpack_modules__ = ({\r\n\r\n/***/ 747:\r\n/***/ (function(__unused_webpack_module, __webpack_exports__, __nested_webpack_require_646__) {\r\n\r\n\"use strict\";\r\n\r\n// EXPORTS\r\n__nested_webpack_require_646__.d(__webpack_exports__, {\r\n  \"default\": function() { return /* binding */ clipboard; }\r\n});\r\n\r\n// EXTERNAL MODULE: ./node_modules/tiny-emitter/index.js\r\nvar tiny_emitter = __nested_webpack_require_646__(279);\r\nvar tiny_emitter_default = /*#__PURE__*/__nested_webpack_require_646__.n(tiny_emitter);\r\n// EXTERNAL MODULE: ./node_modules/good-listener/src/listen.js\r\nvar listen = __nested_webpack_require_646__(370);\r\nvar listen_default = /*#__PURE__*/__nested_webpack_require_646__.n(listen);\r\n// EXTERNAL MODULE: ./node_modules/select/src/select.js\r\nvar src_select = __nested_webpack_require_646__(817);\r\nvar select_default = /*#__PURE__*/__nested_webpack_require_646__.n(src_select);\r\n;// CONCATENATED MODULE: ./src/common/command.js\r\n/**\r\n * Executes a given operation type.\r\n * @param {String} type\r\n * @return {Boolean}\r\n */\r\nfunction command(type) {\r\n  try {\r\n    return document.execCommand(type);\r\n  } catch (err) {\r\n    return false;\r\n  }\r\n}\r\n;// CONCATENATED MODULE: ./src/clipboard-action-cut.js\r\n\r\n\r\n/**\r\n * Cut action wrapper.\r\n * @param {HTMLElement} target\r\n * @return {String}\r\n */\r\n\r\nvar ClipboardActionCut = function ClipboardActionCut(target) {\r\n  var selectedText = select_default()(target);\r\n  command('cut');\r\n  return selectedText;\r\n};\r\n\r\n/* harmony default export */ var clipboard_action_cut = (ClipboardActionCut);\r\n;// CONCATENATED MODULE: ./src/common/create-fake-element.js\r\n/**\r\n * Creates a fake textarea element with a value.\r\n * @param {String} value\r\n * @return {HTMLElement}\r\n */\r\nfunction createFakeElement(value) {\r\n  var isRTL = document.documentElement.getAttribute('dir') === 'rtl';\r\n  var fakeElement = document.createElement('textarea'); // Prevent zooming on iOS\r\n\r\n  fakeElement.style.fontSize = '12pt'; // Reset box model\r\n\r\n  fakeElement.style.border = '0';\r\n  fakeElement.style.padding = '0';\r\n  fakeElement.style.margin = '0'; // Move element out of screen horizontally\r\n\r\n  fakeElement.style.position = 'absolute';\r\n  fakeElement.style[isRTL ? 'right' : 'left'] = '-9999px'; // Move element to the same position vertically\r\n\r\n  var yPosition = window.pageYOffset || document.documentElement.scrollTop;\r\n  fakeElement.style.top = \"\".concat(yPosition, \"px\");\r\n  fakeElement.setAttribute('readonly', '');\r\n  fakeElement.value = value;\r\n  return fakeElement;\r\n}\r\n;// CONCATENATED MODULE: ./src/clipboard-action-copy.js\r\n\r\n\r\n\r\n/**\r\n * Copy action wrapper.\r\n * @param {String|HTMLElement} target\r\n * @param {Object} options\r\n * @return {String}\r\n */\r\n\r\nvar ClipboardActionCopy = function ClipboardActionCopy(target) {\r\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\r\n    container: document.body\r\n  };\r\n  var selectedText = '';\r\n\r\n  if (typeof target === 'string') {\r\n    var fakeElement = createFakeElement(target);\r\n    options.container.appendChild(fakeElement);\r\n    selectedText = select_default()(fakeElement);\r\n    command('copy');\r\n    fakeElement.remove();\r\n  } else {\r\n    selectedText = select_default()(target);\r\n    command('copy');\r\n  }\r\n\r\n  return selectedText;\r\n};\r\n\r\n/* harmony default export */ var clipboard_action_copy = (ClipboardActionCopy);\r\n;// CONCATENATED MODULE: ./src/clipboard-action-default.js\r\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\r\n\r\n\r\n\r\n/**\r\n * Inner function which performs selection from either `text` or `target`\r\n * properties and then executes copy or cut operations.\r\n * @param {Object} options\r\n */\r\n\r\nvar ClipboardActionDefault = function ClipboardActionDefault() {\r\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\r\n  // Defines base properties passed from constructor.\r\n  var _options$action = options.action,\r\n      action = _options$action === void 0 ? 'copy' : _options$action,\r\n      container = options.container,\r\n      target = options.target,\r\n      text = options.text; // Sets the `action` to be performed which can be either 'copy' or 'cut'.\r\n\r\n  if (action !== 'copy' && action !== 'cut') {\r\n    throw new Error('Invalid \"action\" value, use either \"copy\" or \"cut\"');\r\n  } // Sets the `target` property using an element that will be have its content copied.\r\n\r\n\r\n  if (target !== undefined) {\r\n    if (target && _typeof(target) === 'object' && target.nodeType === 1) {\r\n      if (action === 'copy' && target.hasAttribute('disabled')) {\r\n        throw new Error('Invalid \"target\" attribute. Please use \"readonly\" instead of \"disabled\" attribute');\r\n      }\r\n\r\n      if (action === 'cut' && (target.hasAttribute('readonly') || target.hasAttribute('disabled'))) {\r\n        throw new Error('Invalid \"target\" attribute. You can\\'t cut text from elements with \"readonly\" or \"disabled\" attributes');\r\n      }\r\n    } else {\r\n      throw new Error('Invalid \"target\" value, use a valid Element');\r\n    }\r\n  } // Define selection strategy based on `text` property.\r\n\r\n\r\n  if (text) {\r\n    return clipboard_action_copy(text, {\r\n      container: container\r\n    });\r\n  } // Defines which selection strategy based on `target` property.\r\n\r\n\r\n  if (target) {\r\n    return action === 'cut' ? clipboard_action_cut(target) : clipboard_action_copy(target, {\r\n      container: container\r\n    });\r\n  }\r\n};\r\n\r\n/* harmony default export */ var clipboard_action_default = (ClipboardActionDefault);\r\n;// CONCATENATED MODULE: ./src/clipboard.js\r\nfunction clipboard_typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { clipboard_typeof = function _typeof(obj) { return typeof obj; }; } else { clipboard_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return clipboard_typeof(obj); }\r\n\r\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\r\n\r\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\r\n\r\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\r\n\r\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\r\n\r\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\r\n\r\nfunction _possibleConstructorReturn(self, call) { if (call && (clipboard_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\r\n\r\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\r\n\r\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\r\n\r\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Helper function to retrieve attribute value.\r\n * @param {String} suffix\r\n * @param {Element} element\r\n */\r\n\r\nfunction getAttributeValue(suffix, element) {\r\n  var attribute = \"data-clipboard-\".concat(suffix);\r\n\r\n  if (!element.hasAttribute(attribute)) {\r\n    return;\r\n  }\r\n\r\n  return element.getAttribute(attribute);\r\n}\r\n/**\r\n * Base class which takes one or more elements, adds event listeners to them,\r\n * and instantiates a new `ClipboardAction` on each click.\r\n */\r\n\r\n\r\nvar Clipboard = /*#__PURE__*/function (_Emitter) {\r\n  _inherits(Clipboard, _Emitter);\r\n\r\n  var _super = _createSuper(Clipboard);\r\n\r\n  /**\r\n   * @param {String|HTMLElement|HTMLCollection|NodeList} trigger\r\n   * @param {Object} options\r\n   */\r\n  function Clipboard(trigger, options) {\r\n    var _this;\r\n\r\n    _classCallCheck(this, Clipboard);\r\n\r\n    _this = _super.call(this);\r\n    _this.ClipboardActionCut = clipboard_action_cut.bind(_assertThisInitialized(_this));\r\n    _this.ClipboardActionCopy = clipboard_action_copy.bind(_assertThisInitialized(_this));\r\n\r\n    _this.resolveOptions(options);\r\n\r\n    _this.listenClick(trigger);\r\n\r\n    return _this;\r\n  }\r\n  /**\r\n   * Defines if attributes would be resolved using internal setter functions\r\n   * or custom functions that were passed in the constructor.\r\n   * @param {Object} options\r\n   */\r\n\r\n\r\n  _createClass(Clipboard, [{\r\n    key: \"resolveOptions\",\r\n    value: function resolveOptions() {\r\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\r\n      this.action = typeof options.action === 'function' ? options.action : this.defaultAction;\r\n      this.target = typeof options.target === 'function' ? options.target : this.defaultTarget;\r\n      this.text = typeof options.text === 'function' ? options.text : this.defaultText;\r\n      this.container = clipboard_typeof(options.container) === 'object' ? options.container : document.body;\r\n    }\r\n    /**\r\n     * Adds a click event listener to the passed trigger.\r\n     * @param {String|HTMLElement|HTMLCollection|NodeList} trigger\r\n     */\r\n\r\n  }, {\r\n    key: \"listenClick\",\r\n    value: function listenClick(trigger) {\r\n      var _this2 = this;\r\n\r\n      this.listener = listen_default()(trigger, 'click', function (e) {\r\n        return _this2.onClick(e);\r\n      });\r\n    }\r\n    /**\r\n     * Defines a new `ClipboardAction` on each click event.\r\n     * @param {Event} e\r\n     */\r\n\r\n  }, {\r\n    key: \"onClick\",\r\n    value: function onClick(e) {\r\n      var trigger = e.delegateTarget || e.currentTarget;\r\n      var selectedText = clipboard_action_default({\r\n        action: this.action(trigger),\r\n        container: this.container,\r\n        target: this.target(trigger),\r\n        text: this.text(trigger)\r\n      }); // Fires an event based on the copy operation result.\r\n\r\n      this.emit(selectedText ? 'success' : 'error', {\r\n        action: this.action,\r\n        text: selectedText,\r\n        trigger: trigger,\r\n        clearSelection: function clearSelection() {\r\n          if (trigger) {\r\n            trigger.focus();\r\n          }\r\n\r\n          document.activeElement.blur();\r\n          window.getSelection().removeAllRanges();\r\n        }\r\n      });\r\n    }\r\n    /**\r\n     * Default `action` lookup function.\r\n     * @param {Element} trigger\r\n     */\r\n\r\n  }, {\r\n    key: \"defaultAction\",\r\n    value: function defaultAction(trigger) {\r\n      return getAttributeValue('action', trigger);\r\n    }\r\n    /**\r\n     * Default `target` lookup function.\r\n     * @param {Element} trigger\r\n     */\r\n\r\n  }, {\r\n    key: \"defaultTarget\",\r\n    value: function defaultTarget(trigger) {\r\n      var selector = getAttributeValue('target', trigger);\r\n\r\n      if (selector) {\r\n        return document.querySelector(selector);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"defaultText\",\r\n\r\n    /**\r\n     * Default `text` lookup function.\r\n     * @param {Element} trigger\r\n     */\r\n    value: function defaultText(trigger) {\r\n      return getAttributeValue('text', trigger);\r\n    }\r\n    /**\r\n     * Destroy lifecycle.\r\n     */\r\n\r\n  }, {\r\n    key: \"destroy\",\r\n    value: function destroy() {\r\n      this.listener.destroy();\r\n    }\r\n  }], [{\r\n    key: \"copy\",\r\n    value: function copy(target) {\r\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\r\n        container: document.body\r\n      };\r\n      return clipboard_action_copy(target, options);\r\n    }\r\n  }, {\r\n    key: \"cut\",\r\n    value: function cut(target) {\r\n      return clipboard_action_cut(target);\r\n    }\r\n    /**\r\n     * Returns the support of the given action, or all actions if no action is\r\n     * given.\r\n     * @param {String} [action]\r\n     */\r\n\r\n  }, {\r\n    key: \"isSupported\",\r\n    value: function isSupported() {\r\n      var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ['copy', 'cut'];\r\n      var actions = typeof action === 'string' ? [action] : action;\r\n      var support = !!document.queryCommandSupported;\r\n      actions.forEach(function (action) {\r\n        support = support && !!document.queryCommandSupported(action);\r\n      });\r\n      return support;\r\n    }\r\n  }]);\r\n\r\n  return Clipboard;\r\n}((tiny_emitter_default()));\r\n\r\n/* harmony default export */ var clipboard = (Clipboard);\r\n\r\n/***/ }),\r\n\r\n/***/ 828:\r\n/***/ (function(module) {\r\n\r\nvar DOCUMENT_NODE_TYPE = 9;\r\n\r\n/**\r\n * A polyfill for Element.matches()\r\n */\r\nif (typeof Element !== 'undefined' && !Element.prototype.matches) {\r\n    var proto = Element.prototype;\r\n\r\n    proto.matches = proto.matchesSelector ||\r\n                    proto.mozMatchesSelector ||\r\n                    proto.msMatchesSelector ||\r\n                    proto.oMatchesSelector ||\r\n                    proto.webkitMatchesSelector;\r\n}\r\n\r\n/**\r\n * Finds the closest parent that matches a selector.\r\n *\r\n * @param {Element} element\r\n * @param {String} selector\r\n * @return {Function}\r\n */\r\nfunction closest (element, selector) {\r\n    while (element && element.nodeType !== DOCUMENT_NODE_TYPE) {\r\n        if (typeof element.matches === 'function' &&\r\n            element.matches(selector)) {\r\n          return element;\r\n        }\r\n        element = element.parentNode;\r\n    }\r\n}\r\n\r\nmodule.exports = closest;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ 438:\r\n/***/ (function(module, __unused_webpack_exports, __nested_webpack_require_15540__) {\r\n\r\nvar closest = __nested_webpack_require_15540__(828);\r\n\r\n/**\r\n * Delegates event to a selector.\r\n *\r\n * @param {Element} element\r\n * @param {String} selector\r\n * @param {String} type\r\n * @param {Function} callback\r\n * @param {Boolean} useCapture\r\n * @return {Object}\r\n */\r\nfunction _delegate(element, selector, type, callback, useCapture) {\r\n    var listenerFn = listener.apply(this, arguments);\r\n\r\n    element.addEventListener(type, listenerFn, useCapture);\r\n\r\n    return {\r\n        destroy: function() {\r\n            element.removeEventListener(type, listenerFn, useCapture);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Delegates event to a selector.\r\n *\r\n * @param {Element|String|Array} [elements]\r\n * @param {String} selector\r\n * @param {String} type\r\n * @param {Function} callback\r\n * @param {Boolean} useCapture\r\n * @return {Object}\r\n */\r\nfunction delegate(elements, selector, type, callback, useCapture) {\r\n    // Handle the regular Element usage\r\n    if (typeof elements.addEventListener === 'function') {\r\n        return _delegate.apply(null, arguments);\r\n    }\r\n\r\n    // Handle Element-less usage, it defaults to global delegation\r\n    if (typeof type === 'function') {\r\n        // Use `document` as the first parameter, then apply arguments\r\n        // This is a short way to .unshift `arguments` without running into deoptimizations\r\n        return _delegate.bind(null, document).apply(null, arguments);\r\n    }\r\n\r\n    // Handle Selector-based usage\r\n    if (typeof elements === 'string') {\r\n        elements = document.querySelectorAll(elements);\r\n    }\r\n\r\n    // Handle Array-like based usage\r\n    return Array.prototype.map.call(elements, function (element) {\r\n        return _delegate(element, selector, type, callback, useCapture);\r\n    });\r\n}\r\n\r\n/**\r\n * Finds closest match and invokes callback.\r\n *\r\n * @param {Element} element\r\n * @param {String} selector\r\n * @param {String} type\r\n * @param {Function} callback\r\n * @return {Function}\r\n */\r\nfunction listener(element, selector, type, callback) {\r\n    return function(e) {\r\n        e.delegateTarget = closest(e.target, selector);\r\n\r\n        if (e.delegateTarget) {\r\n            callback.call(element, e);\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = delegate;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ 879:\r\n/***/ (function(__unused_webpack_module, exports) {\r\n\r\n/**\r\n * Check if argument is a HTML element.\r\n *\r\n * @param {Object} value\r\n * @return {Boolean}\r\n */\r\nexports.node = function(value) {\r\n    return value !== undefined\r\n        && value instanceof HTMLElement\r\n        && value.nodeType === 1;\r\n};\r\n\r\n/**\r\n * Check if argument is a list of HTML elements.\r\n *\r\n * @param {Object} value\r\n * @return {Boolean}\r\n */\r\nexports.nodeList = function(value) {\r\n    var type = Object.prototype.toString.call(value);\r\n\r\n    return value !== undefined\r\n        && (type === '[object NodeList]' || type === '[object HTMLCollection]')\r\n        && ('length' in value)\r\n        && (value.length === 0 || exports.node(value[0]));\r\n};\r\n\r\n/**\r\n * Check if argument is a string.\r\n *\r\n * @param {Object} value\r\n * @return {Boolean}\r\n */\r\nexports.string = function(value) {\r\n    return typeof value === 'string'\r\n        || value instanceof String;\r\n};\r\n\r\n/**\r\n * Check if argument is a function.\r\n *\r\n * @param {Object} value\r\n * @return {Boolean}\r\n */\r\nexports.fn = function(value) {\r\n    var type = Object.prototype.toString.call(value);\r\n\r\n    return type === '[object Function]';\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ 370:\r\n/***/ (function(module, __unused_webpack_exports, __nested_webpack_require_19045__) {\r\n\r\nvar is = __nested_webpack_require_19045__(879);\r\nvar delegate = __nested_webpack_require_19045__(438);\r\n\r\n/**\r\n * Validates all params and calls the right\r\n * listener function based on its target type.\r\n *\r\n * @param {String|HTMLElement|HTMLCollection|NodeList} target\r\n * @param {String} type\r\n * @param {Function} callback\r\n * @return {Object}\r\n */\r\nfunction listen(target, type, callback) {\r\n    if (!target && !type && !callback) {\r\n        throw new Error('Missing required arguments');\r\n    }\r\n\r\n    if (!is.string(type)) {\r\n        throw new TypeError('Second argument must be a String');\r\n    }\r\n\r\n    if (!is.fn(callback)) {\r\n        throw new TypeError('Third argument must be a Function');\r\n    }\r\n\r\n    if (is.node(target)) {\r\n        return listenNode(target, type, callback);\r\n    }\r\n    else if (is.nodeList(target)) {\r\n        return listenNodeList(target, type, callback);\r\n    }\r\n    else if (is.string(target)) {\r\n        return listenSelector(target, type, callback);\r\n    }\r\n    else {\r\n        throw new TypeError('First argument must be a String, HTMLElement, HTMLCollection, or NodeList');\r\n    }\r\n}\r\n\r\n/**\r\n * Adds an event listener to a HTML element\r\n * and returns a remove listener function.\r\n *\r\n * @param {HTMLElement} node\r\n * @param {String} type\r\n * @param {Function} callback\r\n * @return {Object}\r\n */\r\nfunction listenNode(node, type, callback) {\r\n    node.addEventListener(type, callback);\r\n\r\n    return {\r\n        destroy: function() {\r\n            node.removeEventListener(type, callback);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Add an event listener to a list of HTML elements\r\n * and returns a remove listener function.\r\n *\r\n * @param {NodeList|HTMLCollection} nodeList\r\n * @param {String} type\r\n * @param {Function} callback\r\n * @return {Object}\r\n */\r\nfunction listenNodeList(nodeList, type, callback) {\r\n    Array.prototype.forEach.call(nodeList, function(node) {\r\n        node.addEventListener(type, callback);\r\n    });\r\n\r\n    return {\r\n        destroy: function() {\r\n            Array.prototype.forEach.call(nodeList, function(node) {\r\n                node.removeEventListener(type, callback);\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Add an event listener to a selector\r\n * and returns a remove listener function.\r\n *\r\n * @param {String} selector\r\n * @param {String} type\r\n * @param {Function} callback\r\n * @return {Object}\r\n */\r\nfunction listenSelector(selector, type, callback) {\r\n    return delegate(document.body, selector, type, callback);\r\n}\r\n\r\nmodule.exports = listen;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ 817:\r\n/***/ (function(module) {\r\n\r\nfunction select(element) {\r\n    var selectedText;\r\n\r\n    if (element.nodeName === 'SELECT') {\r\n        element.focus();\r\n\r\n        selectedText = element.value;\r\n    }\r\n    else if (element.nodeName === 'INPUT' || element.nodeName === 'TEXTAREA') {\r\n        var isReadOnly = element.hasAttribute('readonly');\r\n\r\n        if (!isReadOnly) {\r\n            element.setAttribute('readonly', '');\r\n        }\r\n\r\n        element.select();\r\n        element.setSelectionRange(0, element.value.length);\r\n\r\n        if (!isReadOnly) {\r\n            element.removeAttribute('readonly');\r\n        }\r\n\r\n        selectedText = element.value;\r\n    }\r\n    else {\r\n        if (element.hasAttribute('contenteditable')) {\r\n            element.focus();\r\n        }\r\n\r\n        var selection = window.getSelection();\r\n        var range = document.createRange();\r\n\r\n        range.selectNodeContents(element);\r\n        selection.removeAllRanges();\r\n        selection.addRange(range);\r\n\r\n        selectedText = selection.toString();\r\n    }\r\n\r\n    return selectedText;\r\n}\r\n\r\nmodule.exports = select;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ 279:\r\n/***/ (function(module) {\r\n\r\nfunction E () {\r\n  // Keep this empty so it's easier to inherit from\r\n  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)\r\n}\r\n\r\nE.prototype = {\r\n  on: function (name, callback, ctx) {\r\n    var e = this.e || (this.e = {});\r\n\r\n    (e[name] || (e[name] = [])).push({\r\n      fn: callback,\r\n      ctx: ctx\r\n    });\r\n\r\n    return this;\r\n  },\r\n\r\n  once: function (name, callback, ctx) {\r\n    var self = this;\r\n    function listener () {\r\n      self.off(name, listener);\r\n      callback.apply(ctx, arguments);\r\n    };\r\n\r\n    listener._ = callback\r\n    return this.on(name, listener, ctx);\r\n  },\r\n\r\n  emit: function (name) {\r\n    var data = [].slice.call(arguments, 1);\r\n    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\r\n    var i = 0;\r\n    var len = evtArr.length;\r\n\r\n    for (i; i < len; i++) {\r\n      evtArr[i].fn.apply(evtArr[i].ctx, data);\r\n    }\r\n\r\n    return this;\r\n  },\r\n\r\n  off: function (name, callback) {\r\n    var e = this.e || (this.e = {});\r\n    var evts = e[name];\r\n    var liveEvents = [];\r\n\r\n    if (evts && callback) {\r\n      for (var i = 0, len = evts.length; i < len; i++) {\r\n        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\r\n          liveEvents.push(evts[i]);\r\n      }\r\n    }\r\n\r\n    // Remove event from queue to prevent memory leak\r\n    // Suggested by https://github.com/lazd\r\n    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910\r\n\r\n    (liveEvents.length)\r\n      ? e[name] = liveEvents\r\n      : delete e[name];\r\n\r\n    return this;\r\n  }\r\n};\r\n\r\nmodule.exports = E;\r\nmodule.exports.TinyEmitter = E;\r\n\r\n\r\n/***/ })\r\n\r\n/******/ \t});\r\n/************************************************************************/\r\n/******/ \t// The module cache\r\n/******/ \tvar __webpack_module_cache__ = {};\r\n/******/ \t\r\n/******/ \t// The require function\r\n/******/ \tfunction __nested_webpack_require_24658__(moduleId) {\r\n/******/ \t\t// Check if module is in cache\r\n/******/ \t\tif(__webpack_module_cache__[moduleId]) {\r\n/******/ \t\t\treturn __webpack_module_cache__[moduleId].exports;\r\n/******/ \t\t}\r\n/******/ \t\t// Create a new module (and put it into the cache)\r\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\r\n/******/ \t\t\t// no module.id needed\r\n/******/ \t\t\t// no module.loaded needed\r\n/******/ \t\t\texports: {}\r\n/******/ \t\t};\r\n/******/ \t\r\n/******/ \t\t// Execute the module function\r\n/******/ \t\t__webpack_modules__[moduleId](module, module.exports, __nested_webpack_require_24658__);\r\n/******/ \t\r\n/******/ \t\t// Return the exports of the module\r\n/******/ \t\treturn module.exports;\r\n/******/ \t}\r\n/******/ \t\r\n/************************************************************************/\r\n/******/ \t/* webpack/runtime/compat get default export */\r\n/******/ \t!function() {\r\n/******/ \t\t// getDefaultExport function for compatibility with non-harmony modules\r\n/******/ \t\t__nested_webpack_require_24658__.n = function(module) {\r\n/******/ \t\t\tvar getter = module && module.__esModule ?\r\n/******/ \t\t\t\tfunction() { return module['default']; } :\r\n/******/ \t\t\t\tfunction() { return module; };\r\n/******/ \t\t\t__nested_webpack_require_24658__.d(getter, { a: getter });\r\n/******/ \t\t\treturn getter;\r\n/******/ \t\t};\r\n/******/ \t}();\r\n/******/ \t\r\n/******/ \t/* webpack/runtime/define property getters */\r\n/******/ \t!function() {\r\n/******/ \t\t// define getter functions for harmony exports\r\n/******/ \t\t__nested_webpack_require_24658__.d = function(exports, definition) {\r\n/******/ \t\t\tfor(var key in definition) {\r\n/******/ \t\t\t\tif(__nested_webpack_require_24658__.o(definition, key) && !__nested_webpack_require_24658__.o(exports, key)) {\r\n/******/ \t\t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\r\n/******/ \t\t\t\t}\r\n/******/ \t\t\t}\r\n/******/ \t\t};\r\n/******/ \t}();\r\n/******/ \t\r\n/******/ \t/* webpack/runtime/hasOwnProperty shorthand */\r\n/******/ \t!function() {\r\n/******/ \t\t__nested_webpack_require_24658__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }\r\n/******/ \t}();\r\n/******/ \t\r\n/************************************************************************/\r\n/******/ \t// module exports must be returned from runtime so entry inlining is disabled\r\n/******/ \t// startup\r\n/******/ \t// Load entry module and return exports\r\n/******/ \treturn __nested_webpack_require_24658__(747);\r\n/******/ })()\r\n.default;\r\n});\n\n//# sourceURL=webpack://iziToast/./src/js/clipboard.js?");

/***/ }),

/***/ "./src/js/iziToast.js":
/*!****************************!*\
  !*** ./src/js/iziToast.js ***!
  \****************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n * iziToast | v1.4.0\r\n * http://izitoast.marcelodolce.com\r\n * by Marcelo Dolce.\r\n */\r\nconst  ClipboardJS=  __webpack_require__(/*! ./clipboard.js */ \"./src/js/clipboard.js\")\r\nconsole.log('------------------------------------');\r\nconsole.log(ClipboardJS);\r\nconsole.log('------------------------------------');\r\n(function(root, factory) {\r\n  if (true) {\r\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory(root)),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n  } else {}\r\n})(\r\n  typeof __webpack_require__.g !== \"undefined\" ? __webpack_require__.g : window || this.window || this.global,\r\n  function(root) {\r\n    \"use strict\";\r\n\r\n    //\r\n    // Variables\r\n    //\r\n    var $iziToast = {};\r\n    var PLUGIN_NAME = \"iziToast\";\r\n    var BODY = document.querySelector(\"body\");\r\n    var ISMOBILE = !!/Mobi/.test(navigator.userAgent);\r\n    var ISCHROME =\r\n      /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\r\n    var ISFIREFOX = typeof InstallTrigger !== \"undefined\";\r\n    var ACCEPTSTOUCH = \"ontouchstart\" in document.documentElement;\r\n    var POSITIONS = [\r\n      \"bottomRight\",\r\n      \"bottomLeft\",\r\n      \"bottomCenter\",\r\n      \"topRight\",\r\n      \"topLeft\",\r\n      \"topCenter\",\r\n      \"center\"\r\n    ];\r\n    var THEMES = {\r\n      info: {\r\n        color: \"blue\",\r\n        icon: \"ico-info\"\r\n      },\r\n      success: {\r\n        color: \"green\",\r\n        icon: \"ico-success\"\r\n      },\r\n      warning: {\r\n        color: \"orange\",\r\n        icon: \"ico-warning\"\r\n      },\r\n      error: {\r\n        color: \"red\",\r\n        icon: \"ico-error\"\r\n      },\r\n      question: {\r\n        color: \"yellow\",\r\n        icon: \"ico-question\"\r\n      }\r\n    };\r\n    var MOBILEWIDTH = 568;\r\n    var CONFIG = {};\r\n\r\n    $iziToast.children = {};\r\n\r\n    // Default settings\r\n    var defaults = {\r\n      id: null,\r\n      class: \"\",\r\n      title: \"\",\r\n      titleColor: \"\",\r\n      titleSize: \"\",\r\n      titleLineHeight: \"\",\r\n      message: \"\",\r\n      messageColor: \"\",\r\n      messageSize: \"\",\r\n      messageLineHeight: \"\",\r\n      backgroundColor: \"\",\r\n      theme: \"light\", // dark\r\n      color: \"\", // blue, red, green, yellow\r\n      icon: \"\",\r\n      iconText: \"\",\r\n      iconColor: \"\",\r\n      iconUrl: null,\r\n      image: \"\",\r\n      imageWidth: 50,\r\n      maxWidth: null,\r\n      zindex: null,\r\n      layout: 1,\r\n      balloon: false,\r\n      close: true,\r\n      closeOnEscape: false,\r\n      closeOnClick: true,\r\n      position: \"bottomRight\", // bottomRight, bottomLeft, topRight, topLeft, topCenter, bottomCenter, center\r\n      target: \"\",\r\n      targetFirst: true,\r\n      timeout: 5000,\r\n      rtl: false,\r\n      animateInside: true,\r\n      drag: true,\r\n      pauseOnHover: true,\r\n      resetOnHover: false,\r\n      progressBar: true,\r\n      progressBarColor: \"\",\r\n      progressBarEasing: \"linear\",\r\n      overlay: false,\r\n      overlayClose: false,\r\n      overlayColor: \"rgba(0, 0, 0, 0.6)\",\r\n      transitionIn: \"fadeInUp\", // bounceInLeft, bounceInRight, bounceInUp, bounceInDown, fadeIn, fadeInDown, fadeInUp, fadeInLeft, fadeInRight, flipInX\r\n      transitionOut: \"fadeOut\", // fadeOut, fadeOutUp, fadeOutDown, fadeOutLeft, fadeOutRight, flipOutX\r\n      transitionInMobile: \"fadeInUp\",\r\n      transitionOutMobile: \"fadeOutDown\",\r\n      buttons: {},\r\n      inputs: {},\r\n      onOpening: function() {},\r\n      onOpened: function() {},\r\n      onClosing: function() {},\r\n      onClosed: function() {}\r\n    };\r\n\r\n    //\r\n    // Methods\r\n    //\r\n\r\n    /**\r\n     * Polyfill for remove() method\r\n     */\r\n    if (!(\"remove\" in Element.prototype)) {\r\n      Element.prototype.remove = function() {\r\n        if (this.parentNode) {\r\n          this.parentNode.removeChild(this);\r\n        }\r\n      };\r\n    }\r\n\r\n    /*\r\n     * Polyfill for CustomEvent for IE >= 9\r\n     * https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/CustomEvent#Polyfill\r\n     */\r\n    if (typeof window.CustomEvent !== \"function\") {\r\n      var CustomEventPolyfill = function(event, params) {\r\n        params = params || {\r\n          bubbles: false,\r\n          cancelable: false,\r\n          detail: undefined\r\n        };\r\n        var evt = document.createEvent(\"CustomEvent\");\r\n        evt.initCustomEvent(\r\n          event,\r\n          params.bubbles,\r\n          params.cancelable,\r\n          params.detail\r\n        );\r\n        return evt;\r\n      };\r\n\r\n      CustomEventPolyfill.prototype = window.Event.prototype;\r\n\r\n      window.CustomEvent = CustomEventPolyfill;\r\n    }\r\n\r\n    /**\r\n     * A simple forEach() implementation for Arrays, Objects and NodeLists\r\n     * @private\r\n     * @param {Array|Object|NodeList} collection Collection of items to iterate\r\n     * @param {Function} callback Callback function for each iteration\r\n     * @param {Array|Object|NodeList} scope Object/NodeList/Array that forEach is iterating over (aka `this`)\r\n     */\r\n    var forEach = function(collection, callback, scope) {\r\n      if (Object.prototype.toString.call(collection) === \"[object Object]\") {\r\n        for (var prop in collection) {\r\n          if (Object.prototype.hasOwnProperty.call(collection, prop)) {\r\n            callback.call(scope, collection[prop], prop, collection);\r\n          }\r\n        }\r\n      } else {\r\n        if (collection) {\r\n          for (var i = 0, len = collection.length; i < len; i++) {\r\n            callback.call(scope, collection[i], i, collection);\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    /**\r\n     * Merge defaults with user options\r\n     * @private\r\n     * @param {Object} defaults Default settings\r\n     * @param {Object} options User options\r\n     * @returns {Object} Merged values of defaults and options\r\n     */\r\n    var extend = function(defaults, options) {\r\n      var extended = {};\r\n      forEach(defaults, function(value, prop) {\r\n        extended[prop] = defaults[prop];\r\n      });\r\n      forEach(options, function(value, prop) {\r\n        extended[prop] = options[prop];\r\n      });\r\n      return extended;\r\n    };\r\n\r\n    /**\r\n     * Create a fragment DOM elements\r\n     * @private\r\n     */\r\n    var createFragElem = function(htmlStr) {\r\n      var frag = document.createDocumentFragment();\r\n      var temp = document.createElement(\"div\");\r\n      temp.innerHTML = htmlStr;\r\n      while (temp.firstChild) {\r\n        frag.appendChild(temp.firstChild);\r\n      }\r\n      return frag;\r\n    };\r\n\r\n    /**\r\n     * Generate new ID\r\n     * @private\r\n     */\r\n    var generateId = function(params) {\r\n      var newId = btoa(encodeURIComponent(params));\r\n      return newId.replace(/=/g, \"\");\r\n    };\r\n\r\n    /**\r\n     * Check if is a color\r\n     * @private\r\n     */\r\n    var isColor = function(color) {\r\n      if (\r\n        color.substring(0, 1) == \"#\" ||\r\n        color.substring(0, 3) == \"rgb\" ||\r\n        color.substring(0, 3) == \"hsl\"\r\n      ) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    };\r\n\r\n    /**\r\n     * Check if is a Base64 string\r\n     * @private\r\n     */\r\n    var isBase64 = function(str) {\r\n      try {\r\n        return btoa(atob(str)) == str;\r\n      } catch (err) {\r\n        return false;\r\n      }\r\n    };\r\n\r\n    /**\r\n     * Drag method of toasts\r\n     * @private\r\n     */\r\n    var drag = (function() {\r\n      return {\r\n        move: function(toast, instance, settings, xpos) {\r\n          var opacity;\r\n          var opacityRange = 0.3;\r\n          var distance = 180;\r\n\r\n          if (xpos !== 0) {\r\n            toast.classList.add(PLUGIN_NAME + \"-dragged\");\r\n\r\n            toast.style.transform = \"translateX(\" + xpos + \"px)\";\r\n\r\n            if (xpos > 0) {\r\n              opacity = (distance - xpos) / distance;\r\n              if (opacity < opacityRange) {\r\n                instance.hide(\r\n                  extend(settings, {\r\n                    transitionOut: \"fadeOutRight\",\r\n                    transitionOutMobile: \"fadeOutRight\"\r\n                  }),\r\n                  toast,\r\n                  \"drag\"\r\n                );\r\n              }\r\n            } else {\r\n              opacity = (distance + xpos) / distance;\r\n              if (opacity < opacityRange) {\r\n                instance.hide(\r\n                  extend(settings, {\r\n                    transitionOut: \"fadeOutLeft\",\r\n                    transitionOutMobile: \"fadeOutLeft\"\r\n                  }),\r\n                  toast,\r\n                  \"drag\"\r\n                );\r\n              }\r\n            }\r\n            toast.style.opacity = opacity;\r\n\r\n            if (opacity < opacityRange) {\r\n              if (ISCHROME || ISFIREFOX) {\r\n                toast.style.left = xpos + \"px\";\r\n              }\r\n\r\n              toast.parentNode.style.opacity = opacityRange;\r\n\r\n              this.stopMoving(toast, null);\r\n            }\r\n          }\r\n        },\r\n        startMoving: function(toast, instance, settings, e) {\r\n          e = e || window.event;\r\n          var posX = ACCEPTSTOUCH ? e.touches[0].clientX : e.clientX;\r\n          var toastLeft = toast.style.transform.replace(\"px)\", \"\");\r\n          toastLeft = toastLeft.replace(\"translateX(\", \"\");\r\n          var offsetX = posX - toastLeft;\r\n\r\n          if (settings.transitionIn) {\r\n            toast.classList.remove(settings.transitionIn);\r\n          }\r\n          if (settings.transitionInMobile) {\r\n            toast.classList.remove(settings.transitionInMobile);\r\n          }\r\n          toast.style.transition = \"\";\r\n\r\n          if (ACCEPTSTOUCH) {\r\n            document.ontouchmove = function(e) {\r\n              e.preventDefault();\r\n              e = e || window.event;\r\n              var posX = e.touches[0].clientX;\r\n              var finalX = posX - offsetX;\r\n              drag.move(toast, instance, settings, finalX);\r\n            };\r\n          } else {\r\n            document.onmousemove = function(e) {\r\n              e.preventDefault();\r\n              e = e || window.event;\r\n              var posX = e.clientX;\r\n              var finalX = posX - offsetX;\r\n              drag.move(toast, instance, settings, finalX);\r\n            };\r\n          }\r\n        },\r\n        stopMoving: function(toast, e) {\r\n          if (ACCEPTSTOUCH) {\r\n            document.ontouchmove = function() {};\r\n          } else {\r\n            document.onmousemove = function() {};\r\n          }\r\n\r\n          toast.style.opacity = \"\";\r\n          toast.style.transform = \"\";\r\n\r\n          if (toast.classList.contains(PLUGIN_NAME + \"-dragged\")) {\r\n            toast.classList.remove(PLUGIN_NAME + \"-dragged\");\r\n\r\n            toast.style.transition = \"transform 0.4s ease, opacity 0.4s ease\";\r\n            setTimeout(function() {\r\n              toast.style.transition = \"\";\r\n            }, 400);\r\n          }\r\n        }\r\n      };\r\n    })();\r\n\r\n    $iziToast.setSetting = function(ref, option, value) {\r\n      $iziToast.children[ref][option] = value;\r\n    };\r\n\r\n    $iziToast.getSetting = function(ref, option) {\r\n      return $iziToast.children[ref][option];\r\n    };\r\n\r\n    /**\r\n     * Destroy the current initialization.\r\n     * @public\r\n     */\r\n    $iziToast.destroy = function() {\r\n      forEach(\r\n        document.querySelectorAll(\".\" + PLUGIN_NAME + \"-overlay\"),\r\n        function(element, index) {\r\n          element.remove();\r\n        }\r\n      );\r\n\r\n      forEach(\r\n        document.querySelectorAll(\".\" + PLUGIN_NAME + \"-wrapper\"),\r\n        function(element, index) {\r\n          element.remove();\r\n        }\r\n      );\r\n\r\n      forEach(document.querySelectorAll(\".\" + PLUGIN_NAME), function(\r\n        element,\r\n        index\r\n      ) {\r\n        element.remove();\r\n      });\r\n\r\n      this.children = {};\r\n\r\n      // Remove event listeners\r\n      document.removeEventListener(PLUGIN_NAME + \"-opened\", {}, false);\r\n      document.removeEventListener(PLUGIN_NAME + \"-opening\", {}, false);\r\n      document.removeEventListener(PLUGIN_NAME + \"-closing\", {}, false);\r\n      document.removeEventListener(PLUGIN_NAME + \"-closed\", {}, false);\r\n      document.removeEventListener(\"keyup\", {}, false);\r\n\r\n      // Reset variables\r\n      CONFIG = {};\r\n    };\r\n\r\n    /**\r\n     * Initialize Plugin\r\n     * @public\r\n     * @param {Object} options User settings\r\n     */\r\n    $iziToast.settings = function(options) {\r\n      // Destroy any existing initializations\r\n      $iziToast.destroy();\r\n\r\n      CONFIG = options;\r\n      defaults = extend(defaults, options || {});\r\n    };\r\n\r\n    /**\r\n     * Building themes functions.\r\n     * @public\r\n     * @param {Object} options User settings\r\n     */\r\n    forEach(THEMES, function(theme, name) {\r\n      $iziToast[name] = function(options) {\r\n        var settings = extend(CONFIG, options || {});\r\n        settings = extend(theme, settings || {});\r\n\r\n        this.show(settings);\r\n      };\r\n    });\r\n\r\n    /**\r\n     * Do the calculation to move the progress bar\r\n     * @private\r\n     */\r\n    $iziToast.progress = function(options, $toast, callback) {\r\n      var that = this;\r\n      var ref = $toast.getAttribute(\"data-iziToast-ref\");\r\n      var settings = extend(this.children[ref], options || {});\r\n      var $elem = $toast.querySelector(\".\" + PLUGIN_NAME + \"-progressbar div\");\r\n\r\n      return {\r\n        start: function() {\r\n          if (typeof settings.time.REMAINING === \"undefined\") {\r\n            $toast.classList.remove(PLUGIN_NAME + \"-reseted\");\r\n\r\n            if ($elem !== null) {\r\n              $elem.style.transition =\r\n                \"width \" +\r\n                settings.timeout +\r\n                \"ms \" +\r\n                settings.progressBarEasing;\r\n              $elem.style.width = \"0%\";\r\n            }\r\n\r\n            settings.time.START = new Date().getTime();\r\n            settings.time.END = settings.time.START + settings.timeout;\r\n            settings.time.TIMER = setTimeout(function() {\r\n              clearTimeout(settings.time.TIMER);\r\n\r\n              if (!$toast.classList.contains(PLUGIN_NAME + \"-closing\")) {\r\n                that.hide(settings, $toast, \"timeout\");\r\n\r\n                if (typeof callback === \"function\") {\r\n                  callback.apply(that);\r\n                }\r\n              }\r\n            }, settings.timeout);\r\n            that.setSetting(ref, \"time\", settings.time);\r\n          }\r\n        },\r\n        pause: function() {\r\n          if (\r\n            typeof settings.time.START !== \"undefined\" &&\r\n            !$toast.classList.contains(PLUGIN_NAME + \"-paused\") &&\r\n            !$toast.classList.contains(PLUGIN_NAME + \"-reseted\")\r\n          ) {\r\n            $toast.classList.add(PLUGIN_NAME + \"-paused\");\r\n\r\n            settings.time.REMAINING = settings.time.END - new Date().getTime();\r\n\r\n            clearTimeout(settings.time.TIMER);\r\n\r\n            that.setSetting(ref, \"time\", settings.time);\r\n\r\n            if ($elem !== null) {\r\n              var computedStyle = window.getComputedStyle($elem);\r\n              var propertyWidth = computedStyle.getPropertyValue(\"width\");\r\n\r\n              $elem.style.transition = \"none\";\r\n              $elem.style.width = propertyWidth;\r\n            }\r\n\r\n            if (typeof callback === \"function\") {\r\n              setTimeout(function() {\r\n                callback.apply(that);\r\n              }, 10);\r\n            }\r\n          }\r\n        },\r\n        resume: function() {\r\n          if (typeof settings.time.REMAINING !== \"undefined\") {\r\n            $toast.classList.remove(PLUGIN_NAME + \"-paused\");\r\n\r\n            if ($elem !== null) {\r\n              $elem.style.transition =\r\n                \"width \" +\r\n                settings.time.REMAINING +\r\n                \"ms \" +\r\n                settings.progressBarEasing;\r\n              $elem.style.width = \"0%\";\r\n            }\r\n\r\n            settings.time.END = new Date().getTime() + settings.time.REMAINING;\r\n            settings.time.TIMER = setTimeout(function() {\r\n              clearTimeout(settings.time.TIMER);\r\n\r\n              if (!$toast.classList.contains(PLUGIN_NAME + \"-closing\")) {\r\n                that.hide(settings, $toast, \"timeout\");\r\n\r\n                if (typeof callback === \"function\") {\r\n                  callback.apply(that);\r\n                }\r\n              }\r\n            }, settings.time.REMAINING);\r\n\r\n            that.setSetting(ref, \"time\", settings.time);\r\n          } else {\r\n            this.start();\r\n          }\r\n        },\r\n        reset: function() {\r\n          clearTimeout(settings.time.TIMER);\r\n\r\n          delete settings.time.REMAINING;\r\n\r\n          that.setSetting(ref, \"time\", settings.time);\r\n\r\n          $toast.classList.add(PLUGIN_NAME + \"-reseted\");\r\n\r\n          $toast.classList.remove(PLUGIN_NAME + \"-paused\");\r\n\r\n          if ($elem !== null) {\r\n            $elem.style.transition = \"none\";\r\n            $elem.style.width = \"100%\";\r\n          }\r\n\r\n          if (typeof callback === \"function\") {\r\n            setTimeout(function() {\r\n              callback.apply(that);\r\n            }, 10);\r\n          }\r\n        }\r\n      };\r\n    };\r\n\r\n    /**\r\n     * Close the specific Toast\r\n     * @public\r\n     * @param {Object} options User settings\r\n     */\r\n    $iziToast.hide = function(options, $toast, closedBy) {\r\n      if (typeof $toast !== \"object\") {\r\n        $toast = document.querySelector($toast);\r\n      }\r\n\r\n      var that = this;\r\n      var settings = extend(\r\n        this.children[$toast.getAttribute(\"data-iziToast-ref\")],\r\n        options || {}\r\n      );\r\n      settings.closedBy = closedBy || null;\r\n\r\n      delete settings.time.REMAINING;\r\n\r\n      $toast.classList.add(PLUGIN_NAME + \"-closing\");\r\n\r\n      // Overlay\r\n      (function() {\r\n        var $overlay = document.querySelector(\".\" + PLUGIN_NAME + \"-overlay\");\r\n        if ($overlay !== null) {\r\n          var refs = $overlay.getAttribute(\"data-iziToast-ref\");\r\n          refs = refs.split(\",\");\r\n          var index = refs.indexOf(String(settings.ref));\r\n\r\n          if (index !== -1) {\r\n            refs.splice(index, 1);\r\n          }\r\n          $overlay.setAttribute(\"data-iziToast-ref\", refs.join());\r\n\r\n          if (refs.length === 0) {\r\n            $overlay.classList.remove(\"fadeIn\");\r\n            $overlay.classList.add(\"fadeOut\");\r\n            setTimeout(function() {\r\n              $overlay.remove();\r\n            }, 700);\r\n          }\r\n        }\r\n      })();\r\n\r\n      if (settings.transitionIn) {\r\n        $toast.classList.remove(settings.transitionIn);\r\n      }\r\n\r\n      if (settings.transitionInMobile) {\r\n        $toast.classList.remove(settings.transitionInMobile);\r\n      }\r\n\r\n      if (ISMOBILE || window.innerWidth <= MOBILEWIDTH) {\r\n        if (settings.transitionOutMobile) {\r\n          $toast.classList.add(settings.transitionOutMobile);\r\n        }\r\n      } else {\r\n        if (settings.transitionOut) {\r\n          $toast.classList.add(settings.transitionOut);\r\n        }\r\n      }\r\n      var H = $toast.parentNode.offsetHeight;\r\n      $toast.parentNode.style.height = H + \"px\";\r\n      $toast.style.pointerEvents = \"none\";\r\n\r\n      if (!ISMOBILE || window.innerWidth > MOBILEWIDTH) {\r\n        $toast.parentNode.style.transitionDelay = \"0.2s\";\r\n      }\r\n\r\n      try {\r\n        var event = new CustomEvent(PLUGIN_NAME + \"-closing\", {\r\n          detail: settings,\r\n          bubbles: true,\r\n          cancelable: true\r\n        });\r\n        document.dispatchEvent(event);\r\n      } catch (ex) {\r\n        console.warn(ex);\r\n      }\r\n\r\n      setTimeout(function() {\r\n        $toast.parentNode.style.height = \"0px\";\r\n        $toast.parentNode.style.overflow = \"\";\r\n\r\n        setTimeout(function() {\r\n          delete that.children[settings.ref];\r\n\r\n          $toast.parentNode.remove();\r\n\r\n          try {\r\n            var event = new CustomEvent(PLUGIN_NAME + \"-closed\", {\r\n              detail: settings,\r\n              bubbles: true,\r\n              cancelable: true\r\n            });\r\n            document.dispatchEvent(event);\r\n          } catch (ex) {\r\n            console.warn(ex);\r\n          }\r\n\r\n          if (typeof settings.onClosed !== \"undefined\") {\r\n            settings.onClosed.apply(null, [settings, $toast, closedBy]);\r\n          }\r\n        }, 1000);\r\n      }, 200);\r\n\r\n      if (typeof settings.onClosing !== \"undefined\") {\r\n        settings.onClosing.apply(null, [settings, $toast, closedBy]);\r\n      }\r\n    };\r\n\r\n    /**\r\n     * Create and show the Toast\r\n     * @public\r\n     * @param {Object} options User settings\r\n     */\r\n    $iziToast.show = function(options) {\r\n      var that = this;\r\n\r\n      // Merge user options with defaults\r\n      var settings = extend(CONFIG, options || {});\r\n      settings = extend(defaults, settings);\r\n      settings.time = {};\r\n\r\n      if (settings.id === null) {\r\n        settings.id = generateId(\r\n          settings.title + settings.message + settings.color\r\n        );\r\n      }\r\n\r\n      if (settings.displayMode === 1 || settings.displayMode == \"once\") {\r\n        try {\r\n          if (\r\n            document.querySelectorAll(\".\" + PLUGIN_NAME + \"#\" + settings.id)\r\n              .length > 0\r\n          ) {\r\n            return false;\r\n          }\r\n        } catch (exc) {\r\n          console.warn(\r\n            \"[\" +\r\n              PLUGIN_NAME +\r\n              \"] Could not find an element with this selector: \" +\r\n              \"#\" +\r\n              settings.id +\r\n              \". Try to set an valid id.\"\r\n          );\r\n        }\r\n      }\r\n\r\n      if (settings.displayMode === 2 || settings.displayMode == \"replace\") {\r\n        try {\r\n          forEach(\r\n            document.querySelectorAll(\".\" + PLUGIN_NAME + \"#\" + settings.id),\r\n            function(element, index) {\r\n              that.hide(settings, element, \"replaced\");\r\n            }\r\n          );\r\n        } catch (exc) {\r\n          console.warn(\r\n            \"[\" +\r\n              PLUGIN_NAME +\r\n              \"] Could not find an element with this selector: \" +\r\n              \"#\" +\r\n              settings.id +\r\n              \". Try to set an valid id.\"\r\n          );\r\n        }\r\n      }\r\n\r\n      settings.ref =\r\n        new Date().getTime() + Math.floor(Math.random() * 10000000 + 1);\r\n\r\n      $iziToast.children[settings.ref] = settings;\r\n\r\n      var $DOM = {\r\n        body: document.querySelector(\"body\"),\r\n        overlay: document.createElement(\"div\"),\r\n        toast: document.createElement(\"div\"),\r\n        toastBody: document.createElement(\"div\"),\r\n        toastTexts: document.createElement(\"div\"),\r\n        toastCapsule: document.createElement(\"div\"),\r\n        cover: document.createElement(\"div\"),\r\n        buttons: document.createElement(\"div\"),\r\n        inputs: document.createElement(\"div\"),\r\n        icon: !settings.iconUrl\r\n          ? document.createElement(\"i\")\r\n          : document.createElement(\"img\"),\r\n        wrapper: null\r\n      };\r\n      //add clipboard coustom attribute\r\n      $DOM.toast.setAttribute(\"data-clipboard-text\", settings.message);\r\n      $DOM.toast.setAttribute(\"data-iziToast-ref\", settings.ref);\r\n      $DOM.toast.appendChild($DOM.toastBody);\r\n      $DOM.toastCapsule.appendChild($DOM.toast);\r\n\r\n      // CSS Settings\r\n      (function() {\r\n        $DOM.toast.classList.add(PLUGIN_NAME);\r\n        $DOM.toast.classList.add(PLUGIN_NAME + \"-opening\");\r\n        $DOM.toastCapsule.classList.add(PLUGIN_NAME + \"-capsule\");\r\n        $DOM.toastBody.classList.add(PLUGIN_NAME + \"-body\");\r\n        $DOM.toastTexts.classList.add(PLUGIN_NAME + \"-texts\");\r\n\r\n        if (ISMOBILE || window.innerWidth <= MOBILEWIDTH) {\r\n          if (settings.transitionInMobile) {\r\n            $DOM.toast.classList.add(settings.transitionInMobile);\r\n          }\r\n        } else {\r\n          if (settings.transitionIn) {\r\n            $DOM.toast.classList.add(settings.transitionIn);\r\n          }\r\n        }\r\n\r\n        if (settings.class) {\r\n          var classes = settings.class.split(\" \");\r\n          forEach(classes, function(value, index) {\r\n            $DOM.toast.classList.add(value);\r\n          });\r\n        }\r\n\r\n        if (settings.id) {\r\n          $DOM.toast.id = settings.id;\r\n        }\r\n\r\n        if (settings.rtl) {\r\n          $DOM.toast.classList.add(PLUGIN_NAME + \"-rtl\");\r\n          $DOM.toast.setAttribute(\"dir\", \"rtl\");\r\n        }\r\n\r\n        if (settings.layout > 1) {\r\n          $DOM.toast.classList.add(PLUGIN_NAME + \"-layout\" + settings.layout);\r\n        }\r\n\r\n        if (settings.balloon) {\r\n          $DOM.toast.classList.add(PLUGIN_NAME + \"-balloon\");\r\n        }\r\n\r\n        if (settings.maxWidth) {\r\n          if (!isNaN(settings.maxWidth)) {\r\n            $DOM.toast.style.maxWidth = settings.maxWidth + \"px\";\r\n          } else {\r\n            $DOM.toast.style.maxWidth = settings.maxWidth;\r\n          }\r\n        }\r\n\r\n        if (settings.theme !== \"\" || settings.theme !== \"light\") {\r\n          $DOM.toast.classList.add(PLUGIN_NAME + \"-theme-\" + settings.theme);\r\n        }\r\n\r\n        if (settings.color) {\r\n          // #, rgb, rgba, hsl\r\n          if (isColor(settings.color)) {\r\n            $DOM.toast.style.background = settings.color;\r\n          } else {\r\n            $DOM.toast.classList.add(PLUGIN_NAME + \"-color-\" + settings.color);\r\n          }\r\n        }\r\n\r\n        if (settings.backgroundColor) {\r\n          $DOM.toast.style.background = settings.backgroundColor;\r\n          if (settings.balloon) {\r\n            $DOM.toast.style.borderColor = settings.backgroundColor;\r\n          }\r\n        }\r\n      })();\r\n\r\n      // Cover image\r\n      (function() {\r\n        if (settings.image) {\r\n          $DOM.cover.classList.add(PLUGIN_NAME + \"-cover\");\r\n          $DOM.cover.style.width = settings.imageWidth + \"px\";\r\n\r\n          if (isBase64(settings.image.replace(/ /g, \"\"))) {\r\n            $DOM.cover.style.backgroundImage =\r\n              \"url(data:image/png;base64,\" +\r\n              settings.image.replace(/ /g, \"\") +\r\n              \")\";\r\n          } else {\r\n            $DOM.cover.style.backgroundImage = \"url(\" + settings.image + \")\";\r\n          }\r\n\r\n          if (settings.rtl) {\r\n            $DOM.toastBody.style.marginRight = settings.imageWidth + 10 + \"px\";\r\n          } else {\r\n            $DOM.toastBody.style.marginLeft = settings.imageWidth + 10 + \"px\";\r\n          }\r\n          $DOM.toast.appendChild($DOM.cover);\r\n        }\r\n      })();\r\n\r\n      // Button close\r\n      (function() {\r\n        if (settings.close) {\r\n          $DOM.buttonClose = document.createElement(\"button\");\r\n          $DOM.buttonClose.type = \"button\";\r\n          $DOM.buttonClose.classList.add(PLUGIN_NAME + \"-close\");\r\n          $DOM.buttonClose.addEventListener(\"click\", function(e) {\r\n            var button = e.target;\r\n            that.hide(settings, $DOM.toast, \"button\");\r\n          });\r\n          $DOM.toast.appendChild($DOM.buttonClose);\r\n        } else {\r\n          if (settings.rtl) {\r\n            $DOM.toast.style.paddingLeft = \"18px\";\r\n          } else {\r\n            $DOM.toast.style.paddingRight = \"18px\";\r\n          }\r\n        }\r\n      })();\r\n\r\n      // Progress Bar & Timeout\r\n      (function() {\r\n        if (settings.progressBar) {\r\n          $DOM.progressBar = document.createElement(\"div\");\r\n          $DOM.progressBarDiv = document.createElement(\"div\");\r\n          $DOM.progressBar.classList.add(PLUGIN_NAME + \"-progressbar\");\r\n          $DOM.progressBarDiv.style.background = settings.progressBarColor;\r\n          $DOM.progressBar.appendChild($DOM.progressBarDiv);\r\n          $DOM.toast.appendChild($DOM.progressBar);\r\n        }\r\n\r\n        if (settings.timeout) {\r\n          if (settings.pauseOnHover && !settings.resetOnHover) {\r\n            $DOM.toast.addEventListener(\"mouseenter\", function(e) {\r\n              that.progress(settings, $DOM.toast).pause();\r\n            });\r\n            $DOM.toast.addEventListener(\"mouseleave\", function(e) {\r\n              that.progress(settings, $DOM.toast).resume();\r\n            });\r\n          }\r\n\r\n          if (settings.resetOnHover) {\r\n            $DOM.toast.addEventListener(\"mouseenter\", function(e) {\r\n              that.progress(settings, $DOM.toast).reset();\r\n            });\r\n            $DOM.toast.addEventListener(\"mouseleave\", function(e) {\r\n              that.progress(settings, $DOM.toast).start();\r\n            });\r\n          }\r\n        }\r\n      })();\r\n\r\n      // Icon\r\n      (function() {\r\n        if (settings.iconUrl) {\r\n          $DOM.icon.setAttribute(\"class\", PLUGIN_NAME + \"-icon\");\r\n          $DOM.icon.setAttribute(\"src\", settings.iconUrl);\r\n        } else if (settings.icon) {\r\n          $DOM.icon.setAttribute(\r\n            \"class\",\r\n            PLUGIN_NAME + \"-icon \" + settings.icon\r\n          );\r\n\r\n          if (settings.iconText) {\r\n            $DOM.icon.appendChild(document.createTextNode(settings.iconText));\r\n          }\r\n\r\n          if (settings.iconColor) {\r\n            $DOM.icon.style.color = settings.iconColor;\r\n          }\r\n        }\r\n\r\n        if (settings.icon || settings.iconUrl) {\r\n          if (settings.rtl) {\r\n            $DOM.toastBody.style.paddingRight = \"33px\";\r\n          } else {\r\n            $DOM.toastBody.style.paddingLeft = \"33px\";\r\n          }\r\n\r\n          $DOM.toastBody.appendChild($DOM.icon);\r\n        }\r\n      })();\r\n\r\n      // Title & Message\r\n      (function() {\r\n        if (settings.title.length > 0) {\r\n          $DOM.strong = document.createElement(\"strong\");\r\n          $DOM.strong.classList.add(PLUGIN_NAME + \"-title\");\r\n          $DOM.strong.appendChild(createFragElem(settings.title));\r\n          $DOM.toastTexts.appendChild($DOM.strong);\r\n\r\n          if (settings.titleColor) {\r\n            $DOM.strong.style.color = settings.titleColor;\r\n          }\r\n          if (settings.titleSize) {\r\n            if (!isNaN(settings.titleSize)) {\r\n              $DOM.strong.style.fontSize = settings.titleSize + \"px\";\r\n            } else {\r\n              $DOM.strong.style.fontSize = settings.titleSize;\r\n            }\r\n          }\r\n          if (settings.titleLineHeight) {\r\n            if (!isNaN(settings.titleSize)) {\r\n              $DOM.strong.style.lineHeight = settings.titleLineHeight + \"px\";\r\n            } else {\r\n              $DOM.strong.style.lineHeight = settings.titleLineHeight;\r\n            }\r\n          }\r\n        }\r\n\r\n        if (settings.message.length > 0) {\r\n          $DOM.p = document.createElement(\"p\");\r\n          $DOM.p.classList.add(PLUGIN_NAME + \"-message\");\r\n          $DOM.p.appendChild(createFragElem(settings.message));\r\n          $DOM.toastTexts.appendChild($DOM.p);\r\n\r\n          if (settings.messageColor) {\r\n            $DOM.p.style.color = settings.messageColor;\r\n          }\r\n          if (settings.messageSize) {\r\n            if (!isNaN(settings.titleSize)) {\r\n              $DOM.p.style.fontSize = settings.messageSize + \"px\";\r\n            } else {\r\n              $DOM.p.style.fontSize = settings.messageSize;\r\n            }\r\n          }\r\n          if (settings.messageLineHeight) {\r\n            if (!isNaN(settings.titleSize)) {\r\n              $DOM.p.style.lineHeight = settings.messageLineHeight + \"px\";\r\n            } else {\r\n              $DOM.p.style.lineHeight = settings.messageLineHeight;\r\n            }\r\n          }\r\n        }\r\n\r\n        if (settings.title.length > 0 && settings.message.length > 0) {\r\n          if (settings.rtl) {\r\n            $DOM.strong.style.marginLeft = \"10px\";\r\n          } else if (settings.layout !== 2 && !settings.rtl) {\r\n            $DOM.strong.style.marginRight = \"10px\";\r\n          }\r\n        }\r\n      })();\r\n\r\n      $DOM.toastBody.appendChild($DOM.toastTexts);\r\n\r\n      // Inputs\r\n      var $inputs;\r\n      (function() {\r\n        if (settings.inputs.length > 0) {\r\n          $DOM.inputs.classList.add(PLUGIN_NAME + \"-inputs\");\r\n\r\n          forEach(settings.inputs, function(value, index) {\r\n            $DOM.inputs.appendChild(createFragElem(value[0]));\r\n\r\n            $inputs = $DOM.inputs.childNodes;\r\n\r\n            $inputs[index].classList.add(PLUGIN_NAME + \"-inputs-child\");\r\n\r\n            if (value[3]) {\r\n              setTimeout(function() {\r\n                $inputs[index].focus();\r\n              }, 300);\r\n            }\r\n\r\n            $inputs[index].addEventListener(value[1], function(e) {\r\n              var ts = value[2];\r\n              return ts(that, $DOM.toast, this, e);\r\n            });\r\n          });\r\n          $DOM.toastBody.appendChild($DOM.inputs);\r\n        }\r\n      })();\r\n\r\n      // Buttons\r\n      (function() {\r\n        if (settings.buttons.length > 0) {\r\n          $DOM.buttons.classList.add(PLUGIN_NAME + \"-buttons\");\r\n\r\n          forEach(settings.buttons, function(value, index) {\r\n            $DOM.buttons.appendChild(createFragElem(value[0]));\r\n\r\n            var $btns = $DOM.buttons.childNodes;\r\n\r\n            $btns[index].classList.add(PLUGIN_NAME + \"-buttons-child\");\r\n\r\n            if (value[2]) {\r\n              setTimeout(function() {\r\n                $btns[index].focus();\r\n              }, 300);\r\n            }\r\n\r\n            $btns[index].addEventListener(\"click\", function(e) {\r\n              e.preventDefault();\r\n              var ts = value[1];\r\n              return ts(that, $DOM.toast, this, e, $inputs);\r\n            });\r\n          });\r\n        }\r\n        $DOM.toastBody.appendChild($DOM.buttons);\r\n      })();\r\n\r\n      if (\r\n        settings.message.length > 0 &&\r\n        (settings.inputs.length > 0 || settings.buttons.length > 0)\r\n      ) {\r\n        $DOM.p.style.marginBottom = \"0\";\r\n      }\r\n\r\n      if (settings.inputs.length > 0 || settings.buttons.length > 0) {\r\n        if (settings.rtl) {\r\n          $DOM.toastTexts.style.marginLeft = \"10px\";\r\n        } else {\r\n          $DOM.toastTexts.style.marginRight = \"10px\";\r\n        }\r\n        if (settings.inputs.length > 0 && settings.buttons.length > 0) {\r\n          if (settings.rtl) {\r\n            $DOM.inputs.style.marginLeft = \"8px\";\r\n          } else {\r\n            $DOM.inputs.style.marginRight = \"8px\";\r\n          }\r\n        }\r\n      }\r\n\r\n      // Wrap\r\n      (function() {\r\n        $DOM.toastCapsule.style.visibility = \"hidden\";\r\n        setTimeout(function() {\r\n          var H = $DOM.toast.offsetHeight;\r\n          var style =\r\n            $DOM.toast.currentStyle || window.getComputedStyle($DOM.toast);\r\n          var marginTop = style.marginTop;\r\n          marginTop = marginTop.split(\"px\");\r\n          marginTop = parseInt(marginTop[0]);\r\n          var marginBottom = style.marginBottom;\r\n          marginBottom = marginBottom.split(\"px\");\r\n          marginBottom = parseInt(marginBottom[0]);\r\n\r\n          $DOM.toastCapsule.style.visibility = \"\";\r\n          $DOM.toastCapsule.style.height = H + marginBottom + marginTop + \"px\";\r\n\r\n          setTimeout(function() {\r\n            $DOM.toastCapsule.style.height = \"auto\";\r\n            if (settings.target) {\r\n              $DOM.toastCapsule.style.overflow = \"visible\";\r\n            }\r\n          }, 500);\r\n\r\n          if (settings.timeout) {\r\n            that.progress(settings, $DOM.toast).start();\r\n          }\r\n        }, 100);\r\n      })();\r\n\r\n      // Target\r\n      (function() {\r\n        var position = settings.position;\r\n\r\n        if (settings.target) {\r\n          $DOM.wrapper = document.querySelector(settings.target);\r\n          $DOM.wrapper.classList.add(PLUGIN_NAME + \"-target\");\r\n\r\n          if (settings.targetFirst) {\r\n            $DOM.wrapper.insertBefore(\r\n              $DOM.toastCapsule,\r\n              $DOM.wrapper.firstChild\r\n            );\r\n          } else {\r\n            $DOM.wrapper.appendChild($DOM.toastCapsule);\r\n          }\r\n        } else {\r\n          if (POSITIONS.indexOf(settings.position) == -1) {\r\n            console.warn(\r\n              \"[\" +\r\n                PLUGIN_NAME +\r\n                \"] Incorrect position.\\nIt can be âº \" +\r\n                POSITIONS\r\n            );\r\n            return;\r\n          }\r\n\r\n          if (ISMOBILE || window.innerWidth <= MOBILEWIDTH) {\r\n            if (\r\n              settings.position == \"bottomLeft\" ||\r\n              settings.position == \"bottomRight\" ||\r\n              settings.position == \"bottomCenter\"\r\n            ) {\r\n              position = PLUGIN_NAME + \"-wrapper-bottomCenter\";\r\n            } else if (\r\n              settings.position == \"topLeft\" ||\r\n              settings.position == \"topRight\" ||\r\n              settings.position == \"topCenter\"\r\n            ) {\r\n              position = PLUGIN_NAME + \"-wrapper-topCenter\";\r\n            } else {\r\n              position = PLUGIN_NAME + \"-wrapper-center\";\r\n            }\r\n          } else {\r\n            position = PLUGIN_NAME + \"-wrapper-\" + position;\r\n          }\r\n          $DOM.wrapper = document.querySelector(\r\n            \".\" + PLUGIN_NAME + \"-wrapper.\" + position\r\n          );\r\n\r\n          if (!$DOM.wrapper) {\r\n            $DOM.wrapper = document.createElement(\"div\");\r\n            $DOM.wrapper.classList.add(PLUGIN_NAME + \"-wrapper\");\r\n            $DOM.wrapper.classList.add(position);\r\n            document.body.appendChild($DOM.wrapper);\r\n          }\r\n          if (\r\n            settings.position == \"topLeft\" ||\r\n            settings.position == \"topCenter\" ||\r\n            settings.position == \"topRight\"\r\n          ) {\r\n            $DOM.wrapper.insertBefore(\r\n              $DOM.toastCapsule,\r\n              $DOM.wrapper.firstChild\r\n            );\r\n          } else {\r\n            $DOM.wrapper.appendChild($DOM.toastCapsule);\r\n          }\r\n        }\r\n\r\n        if (!isNaN(settings.zindex)) {\r\n          $DOM.wrapper.style.zIndex = settings.zindex;\r\n        } else {\r\n          console.warn(\"[\" + PLUGIN_NAME + \"] Invalid zIndex.\");\r\n        }\r\n      })();\r\n\r\n      // Overlay\r\n      (function() {\r\n        if (settings.overlay) {\r\n          if (\r\n            document.querySelector(\".\" + PLUGIN_NAME + \"-overlay.fadeIn\") !==\r\n            null\r\n          ) {\r\n            $DOM.overlay = document.querySelector(\r\n              \".\" + PLUGIN_NAME + \"-overlay\"\r\n            );\r\n            $DOM.overlay.setAttribute(\r\n              \"data-iziToast-ref\",\r\n              $DOM.overlay.getAttribute(\"data-iziToast-ref\") +\r\n                \",\" +\r\n                settings.ref\r\n            );\r\n\r\n            if (!isNaN(settings.zindex) && settings.zindex !== null) {\r\n              $DOM.overlay.style.zIndex = settings.zindex - 1;\r\n            }\r\n          } else {\r\n            $DOM.overlay.classList.add(PLUGIN_NAME + \"-overlay\");\r\n            $DOM.overlay.classList.add(\"fadeIn\");\r\n            $DOM.overlay.style.background = settings.overlayColor;\r\n            $DOM.overlay.setAttribute(\"data-iziToast-ref\", settings.ref);\r\n            if (!isNaN(settings.zindex) && settings.zindex !== null) {\r\n              $DOM.overlay.style.zIndex = settings.zindex - 1;\r\n            }\r\n            document.querySelector(\"body\").appendChild($DOM.overlay);\r\n          }\r\n\r\n          if (settings.overlayClose) {\r\n            $DOM.overlay.removeEventListener(\"click\", {});\r\n            $DOM.overlay.addEventListener(\"click\", function(e) {\r\n              that.hide(settings, $DOM.toast, \"overlay\");\r\n            });\r\n          } else {\r\n            $DOM.overlay.removeEventListener(\"click\", {});\r\n          }\r\n        }\r\n      })();\r\n\r\n      // Inside animations\r\n      (function() {\r\n        if (settings.animateInside) {\r\n          $DOM.toast.classList.add(PLUGIN_NAME + \"-animateInside\");\r\n\r\n          var animationTimes = [200, 100, 300];\r\n          if (\r\n            settings.transitionIn == \"bounceInLeft\" ||\r\n            settings.transitionIn == \"bounceInRight\"\r\n          ) {\r\n            animationTimes = [400, 200, 400];\r\n          }\r\n\r\n          if (settings.title.length > 0) {\r\n            setTimeout(function() {\r\n              $DOM.strong.classList.add(\"slideIn\");\r\n            }, animationTimes[0]);\r\n          }\r\n\r\n          if (settings.message.length > 0) {\r\n            setTimeout(function() {\r\n              $DOM.p.classList.add(\"slideIn\");\r\n            }, animationTimes[1]);\r\n          }\r\n\r\n          if (settings.icon || settings.iconUrl) {\r\n            setTimeout(function() {\r\n              $DOM.icon.classList.add(\"revealIn\");\r\n            }, animationTimes[2]);\r\n          }\r\n\r\n          var counter = 150;\r\n          if (settings.buttons.length > 0 && $DOM.buttons) {\r\n            setTimeout(\r\n              function() {\r\n                forEach($DOM.buttons.childNodes, function(element, index) {\r\n                  setTimeout(function() {\r\n                    element.classList.add(\"revealIn\");\r\n                  }, counter);\r\n                  counter = counter + 150;\r\n                });\r\n              },\r\n              settings.inputs.length > 0 ? 150 : 0\r\n            );\r\n          }\r\n\r\n          if (settings.inputs.length > 0 && $DOM.inputs) {\r\n            counter = 150;\r\n            forEach($DOM.inputs.childNodes, function(element, index) {\r\n              setTimeout(function() {\r\n                element.classList.add(\"revealIn\");\r\n              }, counter);\r\n              counter = counter + 150;\r\n            });\r\n          }\r\n        }\r\n      })();\r\n\r\n      settings.onOpening.apply(null, [settings, $DOM.toast]);\r\n\r\n      try {\r\n        var event = new CustomEvent(PLUGIN_NAME + \"-opening\", {\r\n          detail: settings,\r\n          bubbles: true,\r\n          cancelable: true\r\n        });\r\n        document.dispatchEvent(event);\r\n      } catch (ex) {\r\n        console.warn(ex);\r\n      }\r\n\r\n      setTimeout(function() {\r\n        $DOM.toast.classList.remove(PLUGIN_NAME + \"-opening\");\r\n        $DOM.toast.classList.add(PLUGIN_NAME + \"-opened\");\r\n\r\n        try {\r\n          var event = new CustomEvent(PLUGIN_NAME + \"-opened\", {\r\n            detail: settings,\r\n            bubbles: true,\r\n            cancelable: true\r\n          });\r\n          document.dispatchEvent(event);\r\n        } catch (ex) {\r\n          console.warn(ex);\r\n        }\r\n\r\n        settings.onOpened.apply(null, [settings, $DOM.toast]);\r\n      }, 1000);\r\n\r\n      if (settings.drag) {\r\n        if (ACCEPTSTOUCH) {\r\n          $DOM.toast.addEventListener(\r\n            \"touchstart\",\r\n            function(e) {\r\n              drag.startMoving(this, that, settings, e);\r\n            },\r\n            false\r\n          );\r\n\r\n          $DOM.toast.addEventListener(\r\n            \"touchend\",\r\n            function(e) {\r\n              drag.stopMoving(this, e);\r\n            },\r\n            false\r\n          );\r\n        } else {\r\n          $DOM.toast.addEventListener(\r\n            \"mousedown\",\r\n            function(e) {\r\n            //   const timeId = GenNonDuplicateID(3);\r\n            //   copy(timeId, \"innerText\");\r\n      var clipboard = new ClipboardJS( $DOM.toast);\r\n      clipboard.on('success', function (e) {\r\n        console.log(e);\r\n      });\r\n\r\n      clipboard.on('error', function (e) {\r\n        console.log(e);\r\n      });\r\n              e.preventDefault();\r\n              drag.startMoving(this, that, settings, e);\r\n            },\r\n            false\r\n          );\r\n\r\n          $DOM.toast.addEventListener(\r\n            \"mouseup\",\r\n            function(e) {\r\n              e.preventDefault();\r\n              drag.stopMoving(this, e);\r\n            },\r\n            false\r\n          );\r\n        }\r\n      }\r\n\r\n      if (settings.closeOnEscape) {\r\n        document.addEventListener(\"keyup\", function(evt) {\r\n          evt = evt || window.event;\r\n          if (evt.keyCode == 27) {\r\n            that.hide(settings, $DOM.toast, \"esc\");\r\n          }\r\n        });\r\n      }\r\n\r\n      if (settings.closeOnClick) {\r\n        $DOM.toast.addEventListener(\"click\", function(evt) {\r\n          that.hide(settings, $DOM.toast, \"toast\");\r\n        });\r\n      }\r\n\r\n      that.toast = $DOM.toast;\r\n    };\r\n    return $iziToast;\r\n  }\r\n);\r\n\r\n// function createLink(params) {\r\n//     let link=document.createElement('link')\r\n//     link.type='text/css';\r\n//     link.rel='stylesheet'\r\n//     link.href='./'\r\n// }\r\n/**\r\n * çæä¸ä¸ªç¨ä¸éå¤çID\r\n */\r\nfunction GenNonDuplicateID(randomLength) {\r\n  let idStr = Date.now().toString(36);\r\n  idStr += Math.random()\r\n    .toString(36)\r\n    .substr(3, randomLength);\r\n  return idStr;\r\n}\r\n\r\n/**\r\n * ä¸é®ç²è´´\r\n * @param  {String} id [éè¦ç²è´´çåå®¹]\r\n * @param  {String} attr [éè¦ copy çå±æ§ï¼é»è®¤æ¯ innerTextï¼ä¸»è¦ç¨éä¾å¦èµå¼ a æ ç­¾ä¸ç href é¾æ¥]\r\n *\r\n * range + selection\r\n *\r\n * 1.åå»ºä¸ä¸ª range\r\n * 2.æåå®¹æ¾å¥ range\r\n * 3.æ range æ¾å¥ selection\r\n *\r\n * æ³¨æï¼åæ° attr ä¸è½æ¯èªå®ä¹å±æ§\r\n * æ³¨æï¼å¯¹äº user-select: none çåç´ æ æ\r\n * æ³¨æï¼å½ id ä¸º false ä¸ attr ä¸ä¼ç©ºï¼ä¼ç´æ¥å¤å¶ attr çåå®¹\r\n */\r\nfunction copy(id, attr) {\r\n  let target = null;\r\n\r\n  if (attr) {\r\n    target = document.createElement(\"div\");\r\n    target.id = \"tempTarget\";\r\n    target.style.opacity = \"0\";\r\n    if (id) {\r\n      const curNode = document.querySelector(\"#\" + id);\r\n      target.innerText = curNode[attr];\r\n    } else {\r\n      target.innerText = attr;\r\n    }\r\n    document.body.appendChild(target);\r\n  } else {\r\n    target = document.querySelector(\"#\" + id);\r\n  }\r\n\r\n  try {\r\n    const range = document.createRange();\r\n    range.selectNode(target);\r\n    window.getSelection().removeAllRanges();\r\n    window.getSelection().addRange(range);\r\n    document.execCommand(\"copy\");\r\n    window.getSelection().removeAllRanges();\r\n    console.log(\"å¤å¶æå\");\r\n  } catch (e) {\r\n    console.log(\"å¤å¶å¤±è´¥\");\r\n  }\r\n\r\n  if (attr) {\r\n    // remove temp target\r\n    target.parentElement.removeChild(target);\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack://iziToast/./src/js/iziToast.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/global */
/******/ 	!function() {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./src/js/iziToast.js");
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});